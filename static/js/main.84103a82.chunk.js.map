{"version":3,"sources":["components/filter/Filter.module.css","components/contactList/ContactList.module.css","components/contactEditor/ContactEditor.module.css","components/container/Container.js","components/contactEditor/ContactEditor.js","components/filter/Filter.js","components/contactList/ContactList.js","App.js","index.js","components/container/Container.module.css"],"names":["module","exports","Container","children","className","container","wrapper","ContactEditor","state","id","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","nameId","shortid","generate","numberId","this","contactEditor_form","label","htmlFor","placeholder","type","pattern","title","onChange","autoComplete","required","add_contact","Component","Filter","contact_search","filter_input","ContactList","contacts","onDeleteContact","map","contactItem","contactDelete","onClick","App","initialContacts","useState","JSON","parse","window","localStorage","getItem","setContacts","useEffect","setItem","stringify","filter","setFilter","contact","find","alert","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84103a82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_search\":\"Filter_contact_search__3rZe3\",\"filter_input\":\"Filter_filter_input__29ZEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__nWogH\",\"contactDelete\":\"ContactList_contactDelete__eBMxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactEditor_form\":\"ContactEditor_contactEditor_form__1NttA\",\"label\":\"ContactEditor_label__16Gqh\",\"placeholder\":\"ContactEditor_placeholder__39kH6\",\"add_contact\":\"ContactEditor_add_contact__1DwCE\"};","import React from 'react';\r\nimport {container, wrapper} from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={container}>\r\n        <div className={wrapper}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { contactEditor_form, placeholder, label, add_contact } from './ContactEditor.module.css';\r\n\r\nclass ContactEditor extends Component {\r\n    state = {\r\n        id: '',\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { name, number, value } = e.currentTarget;\r\n        this.setState({ [name]: value, [number]: value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ id: '', name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        const nameId = shortid.generate();\r\n        const numberId = shortid.generate();\r\n        const { number, name } = this.state;\r\n      \r\n        return (\r\n            <form className={contactEditor_form } onSubmit={this.handleSubmit}>\r\n                <label className={ label} htmlFor={nameId} aria-label=\"Name\">Name</label>\r\n                <input\r\n                className ={placeholder}\r\n                    type=\"text\"\r\n                    id={nameId}\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Enter a name\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    required\r\n                />\r\n                <label className={ label} htmlFor={numberId} aria-label=\"Number\">Phone number</label>\r\n                <input\r\n                    className={placeholder}\r\n                    type=\"tel\"\r\n                    placeholder=\"Enter a phone number\"\r\n                    autoComplete=\"off\"\r\n                    \r\n                    id={numberId}\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={this.handleChange}\r\n                    value={number}\r\n                />\r\n                <button type=\"submit\" className={add_contact}>Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactEditor;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {filter_input, contact_search} from './Filter.module.css'\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={contact_search}>\r\n        Find contact by name\r\n        <input className={filter_input} type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { contactItem, contactDelete } from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <ul className=\"contactList\">\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={contactItem}>\r\n               \r\n                <span>{name}: { number}</span>\r\n                {/* <span>{number}</span>  */}\r\n                <button\r\n                    type=\"button\"\r\n                    className={contactDelete}\r\n                    onClick={() => onDeleteContact(id)}>\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\n\r\nContactList.propTypes = {\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number:PropTypes.string.isRequired,\r\n    })).isRequired,\r\n};\r\n\r\nexport default ContactList;","\nimport React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nimport Container from './components/container';\nimport ContactEditor from './components/contactEditor/';\nimport Filter from './components/filter';\nimport ContactList from './components/contactList/';\n\n\n\nexport default function App() {\n   const initialContacts = [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ]\n  \n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const [filter, setFilter] = useState('');\n\n  const addContact = ( {name, number} ) => {\n    \n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n     \n    if (contacts.find(contact => contact.number === number)) {\n      alert(`${number} has already been saved`);\n      return;\n    }\n\n    setContacts([contact, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts((contacts) => \n      contacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const changeFilter = e => {\n    setFilter( e.currentTarget.value );\n  }\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n\n\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactEditor onSubmit={addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact} />\n      </Container>\n    );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__158oR\",\"wrapper\":\"Container_wrapper__2Cx_A\"};"],"sourceRoot":""}